name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Restore Terraform state from cache
      uses: actions/cache@v3
      with:
        path: app/terraform.tfstate
        key: terraform-state

    - name: Terraform Init and Apply
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: make terraform-apply

    - name: Save Terraform state to cache
      uses: actions/cache@v3
      with:
        path: app/terraform.tfstate
        key: terraform-state

  build-and-push-docker:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      run: make docker-login
      env:
        DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: make docker-build
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Push Docker image to Docker Hub
      run: make docker-push

  deploy-and-test-aws:
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Security Group ID
        run: echo "SECURITY_GROUP_ID=sg-05f550060decbf6d0" >> $GITHUB_ENV

      - name: Get GitHub Actions public IP
        run: echo "PUBLIC_IP=$(curl https://checkip.amazonaws.com)" >> $GITHUB_ENV

      - name: Add GitHub Actions IP to AWS Security Group (SSH and Kafka)
        run: |
          # Add SSH (port 22) access
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ env.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.PUBLIC_IP }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up SSH for EC2
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Clean up Docker containers (before tests)
        run: make docker-clean-ec2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy Docker image to EC2
        run: make deploy-docker-ec2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}

      - name: Run tests in Docker on EC2
        run: make run-tests-ec2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}

      - name: Clean up Docker containers (after tests)
        if: always()
        run: make docker-clean-ec2
        env:
          EC2_IP: ${{ secrets.EC2_IP }}

      - name: Remove IP from AWS Security Group (SSH and Kafka)
        if: always()
        run: |
          # Revoke SSH (port 22) access
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ env.SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ env.PUBLIC_IP }}/32
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}